cmdhistory=["{\:a \:b \:c}" "(def temp {\:a \:b \:c \:d \:e})" "[\:a \:b]" "[\:a \:b \:c]" "(split-at 3 [\:a \:a \:a \:b \:b \:c])" "(split-with \#(\= %s) [\:a \:a \:a \:b \:b])" "(split-with \#(\= %) [\:a \:a \:a \:b \:b])" "(split-with \#(\= \:a) [\:a \:a \:a \:b \:b])" "(split-with \#(\=) [\:a \:a \:a \:b \:b])" "(split-at \#(<\= \:a) [\:a \:a \:a \:b \:b])" "(split-with \:b [\:a \:a \:a \:b \:b])" "(split-with \:b [\:a \:a \:a \:b \:b \:c])" "(split-at \:b [\:a \:a \:a \:b \:b \:c \:c])" "(split-at [\:b] [\:a \:a \:a \:b \:b \:c \:c])" "(split-at b [\:a \:a \:a \:b \:b \:c \:c])" "(partition-all 2 (1 2 3 4 5 6 7 8))" "(partition-all 2 '(1 2 3 4 5 6 7 8))" "(partition 2 '(1 2 3 4 5 6 7))" "(partition-all 2 '(1 2 3 4  5 6 7))" "(partition-all [\:a] [\:a \:a \:b \:c])" "(partition-all a '(a a a b b b c))" "(partition-all (a) '(a a a b b b c))" "(partition [2 (1 2 3 4 5 6)])" "(partition [2 '(1 2 3 4 5 6)])" "(split-with (<\= 3) [1 2 3 4 5])" "(split-with (partial <\= 3) [1 2 3 4 5])" "(split-with (partial >\= 3) [1 2 3 4 5])" "(+ 2 3)" "(splitFn [1 2 3 4 5 6])" "(splitFn 1 2 3 4 5 6)" "(splitFn [1 2 3])" "(splitFn 12)" "(splitFn \\"2\\" \\"3\\" \\"3\\" \\"4\\" \\"5\\")" "(splitFn 2)" "(split-with 2 [1 2 3 4 5 6])" "(split-with even? (2 4 6 7 8 9 0))" "(split-with even? [2 4 6 8 9 6 4 2])" "(split-with (\= (first [\:a \:a])) [\:a \:a \:b \:b \:c])" "(first [\:a \:b \:c])" "(split-with \#(<\= % 10) (range 0 20 2))" "(split-with \#(\= % (first [\:a \:a])) [\:a \:a \:a \:b \:b \:c \:c])" "(split-with \#(\= % (first [\:a])) [\:a \:a \:a \:b \:b \:c \:c])" "(split-with (\= % (first [\:a \:a])) [\:a \:a \:a \:b \:b \:c \:c])" "(split-with \#(\= % (first [\:a])) [\:a \:a \:a \:b \:b \:c \:c])" "(splitFn [\:a \:a \:a \:b \:b \:c])" "(partition-by \#(\= % (first [\:a])) [\:a \:a \:b \:b \:c \:c])" "(partition-by \#(\= % (first [\:a])) [\:a \:a \:b \:b \:a \:c])" "(function1 [\:a \:a \:a \:b \:b \:c \:c])" "(function2 [\:a \:a \:a \:b \:b \:c])" "(function2 [\:a \:a \:a \:b \:b \:c \:c])" "(function1 [\:a \:a \:b \:b \:z])" "(function2 [\:a \:a \:a \:b \:b \:c \:c])" "(function2 [\:a \:a \:b \:b \:c \:c \:d \:d])" "(function1 [\:a \:a \:b \:b \:c \:c])" "(function2 [\:a \:a \:b \:b \:c \:c])" "(peek [10 20 30 a])" "(peek [10 20 30 \\"a\\"])" "(function2 [\:a \:a \:b \:b \:c \:c])" "(function1 [\:a \:a \:b \:b \:c \:c])" "(function2 [\:a \:a \:b \:b \:c \:c])" "(function1 [\:a \:a \:b \:b \:c \:c])" "(function2 [\:a \:a \:b \:b \:c \:c])" "(function1 [a a a b b c c c])" "(function1 [\\"a\\" \\"a\\" \\"b\\" \\"b\\" \\"c\\"])" "(last [1 2 3 4 5])" "(\= \\"a\\" \\"a\\")" "(def x [\:a \:a \:a \:b \:b])" "x" "(let [[y] x])" "y" "(let [[y] x]\\n  print y)" "(function2 [\:a \:a \:a \:b \:b \:c \:c])" "(+ 3 2)" "(function2 [\:a \:a \:a \:b \:b \:c \:c \:c \:c])" "\=> (function2 [\:a \:a \:a \:b \:b])" "(function2 [\:a \:a \:a \:b \:b])" "(function1 [\:a \:a \:b \:b \:c])" "(function2 [\:c \:c \:c \:b \:b])" "(function1 [\:c \:c \:c \:b \:b])" "(function2 [\:a \:a \:a \:b \:b \:c \:c])" "(function2 [\:a \:a \:a \:b \:b])" "(function2 [\:a \:a \:a \:b \:b \:c \:c])" "(into [\:a \:a] \:b)" "(into [\:a \:a] [\:b])" "(into ([\:a \:a]) [\:b])" "(into ([\:a \:a]) \\"a\\")" "(function2 [\:a \:a \:b \:b])" "(when-first [a [1 2 3]] a)" "(+ 2 3)" "(when-first [a [1 2 3]] a)" "(when-first [a [9 2 3]] a)" "(when-first [a [1 2 3]] b)" "(function2 [\:a \:a \:a \:b \:b \:c \:c])" "(function2 [\:a \:a \:a \:b \:b])" "(function2 [\:a \:a \:b \:b])" "(function2 [\:a \:a \:b \:b \:c \:c])" "(function2 [\:a \:a \:b \:b \:b \:b])" "\=> (function2 [\:a \:a \:b \:b \:b \:b])" "(function2 [\:a \:a \:b \:b \:b \:b])" "(function2 [\:a \:a \:b \:b \:b \:b \:c \:c])" "(function2 [\:a \:a \:b \:b \:c \:c])" "(function2 [\:a \:a \:b \:b])" "(function2 [\:a \:a \:b \:b \:c \:c \:c])" "(def a 12)" "a" "(def b (a))" "(def b (lazy-seq a))" "b" "(b)" "b" "(function2 [\:a \:a \:a \:b \:b \:c \:c])" "(function2 [\:a \:a \:a \:b \:b \:c \:c \:d \:d])" "(function2 [\:a \:a \:b \:b \:c \:c \:c])" "\\n(function2 [\:a \:a \:b \:b \:c \:c \:c])" "(function2 [\:a \:a \:b \:b])" "(function2 [\:a \:a \:b \:c])" "(function2 [\:a \:a \:b \:c \:c])" "(function2 [\:a \:a \:b \:b \:c \:c \:d \:d])" "\=> (function2 [\:a \:a \:b \:b \:c \:c \:d \:d \:a \:a])" "(function2 [\:a \:a \:b \:b \:c \:c \:d \:d \:a \:a])" "\=> (function2 [\:a \:a \:b \:b \:c \:c \:d \:d \:a \:a \:d \:d])" "(function2 [\:a \:a \:b \:b \:c \:c \:d \:d \:a \:a])" "(frequencies [\:a \:a \:a \:b \:b])" "(function2 [\:a \:a \:b \:b \:c \:c \:d \:d \:a \:a])" "(frequencies (\:a \:a \:b \:b))" "(frequencies [(\:a \:a) (\:b \:b)])" "(function3 [\:a \:a \:a \:b \:b \:c \:c])" "(function3 [\:a \:a \:b \:b \:b \:c \:c])" "(count [\:a \:a \:b \:b])" "(function3 [\:a \:a \:b \:b \:b \:c \:c])" "(partition-by [\:a \:a \:b \:b \:b \:c \:c \:c \:d \:d])" "(partition-by identity [\:a \:a \:b \:b \:b \:c \:c \:c \:d \:d])" "(vec (partition-by identity [\:a \:a \:b \:b \:b \:c \:c \:c \:d \:d]))" "(vec (partition-by \#(\= % (first [\:a \:a])) [\:a \:a \:b \:b \:b \:c \:c \:c \:d \:d]))" "(group-by count [\:a \:a \:b \:b \:b \:c \:c \:c \:d \:d])" "\=> (group-by count [\\"a\\" \\"b\\" \\"a\\" \\"b\\" \\"c\\"])" "(function3 [\:a \:a \:b \:b \:b \:c \:c \:c \:d \:d])" "(function3 [\:a \:a \:a \:b \:b])" "(function3 [\:a \:a \:a \:b \:b \:c \:c])" "(function3 [\:a \:a \:b \:b \:c \:c])" "(frequencies [\:a \:a \:b \:b \:c \:c])" "\=> (frequencies [(\:a \:a) (\:b \:b) (\:c \:c)])" "(frequencies [(\:a \:a) (\:b \:b) (\:c \:c)])" "(map \#(count  %  ) [\:a \:a \:b \:b \:c])" "(map \#(vector (first %) (* 2 (second %)))  {\:a 1 \:b 2 \:c 3})" "(map \#(vector (first %) (* 1 (second %)))  {\:a 1 \:b 2 \:c 3})" "(map \#(vector (first %) ((second %)))  {\:a 1 \:b 2 \:c 3})" "(map \#(vector (first %))  {\:a 1 \:b 2 \:c 3})" "(map \#(vector (first %))  {\:a \:b \:c})" "(map \#(vector (first %))  [\:a \:a \:b \:b])" "(map-indexed vector [(\:a \:a) (\:b \:b)])" "\=> (map-indexed vector [a s d f g h])" "(map-indexed vector [a s d f g h])" "\=> (map-indexed vector [\\"viralsavani\\"])" "(map-indexed vector \\"viralsavani\\")" "\=> (map-indexed count [\:a \:a \:b \:b])" "\=> \=> (map-indexed count \\"viralsavani\\")" "(count [\:a \:a \:a \:b])" "(count [(\:a \:a \:a) (\:b \:b)])" "(function2 [\:a \:a \:b \:b \:c \:c \:c])" "(function3 [\:a \:a \:a \:b \:b])" "(frequencies [\:a \:a \:b \:b])" "(hash-map [a 1 b 2])" "(hash-map [\:a 1 \:b 2])" "(hash-map [\\"a\\" 1 \\"b\\" 2])" "(hash-map [\\"a\\" 1, \\"b\\" 2])" "(+ 3 4)" "(map \#(hash-map % 0) (seq \\"abcdefgh\\"))" "(map \#(hash-map % 0) (seq \\"aaabcdefgh\\"))" "(function2 [\:a \:a \:a \:b \:b \:b \:c])" "(function3 [\:a \:a \:a \:b \:b \:b \:c])" "(zipmap [\:a \:b \:c \:d \:e] [1 2 3 4 5])" "( sort (zipmap [\:a \:b \:c \:d \:e] [1 2 3 4 5]))" "( sort (zipmap [(\:a \:a) \:b \:c \:d \:e] [1 2 3 4 5]))" "(function3 [\:a \:a \:a \:b \:b \:c \:c])" "(distinct [\:a \:a \:b \:b \:c])" "(function3 [\:a \:a \:a \:b \:b \:c \:c])" "(function3 [\:a \:a \:b \:b \:c \:c])" "(count (function3 [\:a \:a \:b \:b]))" "(function3 [\:a \:a \:b \:b \:c \:c])" "(function2 [\:a \:a \:b \:b \:c])" "(function3 [\:a \:a \:b \:b \:c])" "\=> (function3 [\:a \:a \:a \:b \:b \:c \:c])" "(function3 [\:a \:a \:a \:b \:b \:c \:c])" "(interpose \\",\\" (function2 [\:a \:a \:a \:b \:b \:c \:c]))" "(interpose , (function2 [\:a \:a \:a \:b \:b \:c \:c]))" "(interpose (map \#(count %) (function2 [\:a \:a \:a \:b \:b \:c \:c])) (function2 [\:a \:a \:a \:b \:b \:c \:c]))" "(interpose (\#(count %) (function2 [\:a \:a \:a \:b \:b \:c \:c])) (function2 [\:a \:a \:a \:b \:b \:c \:c]))" "(interleave (\#(count %) (function2 [\:a \:a \:a \:b \:b \:c \:c])) (function2 [\:a \:a \:a \:b \:b \:c \:c]))" "(interpose (map \#(count %) (function2 [\:a \:a \:a \:b \:b \:c \:c])) (function2 [\:a \:a \:a \:b \:b \:c \:c]))" "(function3 [\:a \:a \:b \:b \:c])" "(first (function2 [\:a \:a \:a \:b \:b \:c \:c]))" "(interleave [\:a \:b \:c] [1 2 3])" "(interleave [(\:a \:a) \:b \:c] [1 2 3])" "(import '(java.io))" "(import '(java.io File))" "(.listFiles (File. \\".\\"))" "(seq (.listFiles (File. \\".\\")))" "(pprint(seq (.listFiles (File. \\".\\"))))" "(get (function2 [\:a \:a \:a \:b \:b \:c \:c] 1) )" "(get [\:a \:a \:b] 3)" "(get [\:a \:a \:b] 2)" "\=> (get [(\:a \:a) (\:b \:b) (\:c \:c)] 2)" "(get [(\:a \:a) (\:b \:b) (\:c \:c)] 1)" "(function2 [\:a \:a \:b \:b \:c \:c \:c])" "(function3 [\:a \:a \:b \:b \:c \:c \:c])" "(type (function2 [\:a \:a \:b \:b]))" "(split-at 1 [(\:a \:a)(\:b \:b)(\:c)])" "(split-at 1 [(\:a \:a)(\:b \:b)(\:c \:c)])" "(function2 [\:a \:a \:b \:b])" "(function3 [\:a \:a \:b \:b])" "(function3 [\:a \:a \:b \:b \:b \:c \:c])" "(frequencies [\:a \:a \:b \:b \:b \:c \:c])" "(distinct [\:a \:a \:b \:b \:b \:c \:c])" "(function3 [\:a \:a \:b \:b \:b \:c \:c])" "(count [(\:a \:a) (\:b \:b) (\:c \:c)])" "(type (frequencies [\:a \:a \:b \:b]))" "(vector (frequencies [\:a \:a \:b \:b]))" "(lazy-seq (frequencies [\:a \:a \:b \:b]))" "(function3 [\:a \:a \:b \:b \:c \:c])" "(function3 [\:a \:b \:b \:c \:c])" "(function3 [\:a \:a \:b \:b \:c])" "(function3 [\:a \:a \:b \:b \:c \:c])" "(function2 [\:a \:a \:b \:b \:c])" "(function3 [\:a \:a \:b \:b \:c \:c])" "(reduce \#(assoc %1 %2 (inc (%1 %2 0))) {} [\:a \:a \:b \:b \:c \:c])" "(reduce \#(assoc %a %b (inc (%a %b 0))) {} [\:a \:a \:b \:b \:c \:c])" "(reduce \#(assoc %1 %2 (inc (%1 %2 0))) {} [\:a \:a \:b \:b \:c \:c])" "\=> (reduce \#(assoc %1 %2 (inc (%1 %2 0))) [\:a \:a \:b \:b \:c \:c])" "(function3 [\:a \:a \:b \:b \:c])" "(reduce \#(assoc %1 %2 (inc (%1 %2 0))) {} [\:a \:a \:b \:b])" "(lazy-seq (frequencies (function2 [\:a \:a \:b \:b \:c])))" "(function3 [\:a \:a \:b \:b])" "(function3 [\:a \:a \:b \:b \:c])" "(function3 [\:a \:a \:b \:b \:c \:b \:b \:a \:a])" "(function3 [\:a \:a \:b \:b \:c \:c \:d \:d])" "(function3 [\:a \:a \:b \:b \:c \:c \:b \:b \:a \:a])" "(function3 [\:b \:b \:b \:a \:a \:c \:c \:d \:d \:d])" "(function3 [\:b \:b \:b \:a \:a \:c \:c \:d \:d \:d \:a \:a \:a])" "(function3 [\:b \:b \:b \:a \:a \:c \:c \:d \:d \:d ])" "(function3 [\:b \:b \:b \:a \:a \:c \:c \:d \:d \:d \:e \:e \:e \:e])" "(function3 [\:a \:a \:b \:b \:c \:c \:D \:D \:D])" "(first \\"Viral\\")" "(rest \\"Viral\\")" "(apply str (rest \\"Viral\\"))" "(import '(java.io File))" "(listFiles (File. \\".\\"))" "(.listFiles (File. \\".\\"))" "(seq (.listFiles (File. \\".\\")))" "(seq (.listFiles (\\".\\")))" "(seq (.listFiles (Folders. \\".\\")))" "(seq (.listFiles (File. \\".\\")))" "(file-seq (.listFiles (File. \\".\\")))" "(file-seq (File. \\".\\"))" "(file-seq (File. \\".clj\\"))" "(count (file-seq (File. \\".\\")))" "(function3 [\:a \:a \:c \:c \:c \:b \:b \:b \:e \:e \:e \:e])" "(function3 [\:a \:a \:a \:b \:b \:c \:c \:c \:c])" "(function3 [\:a \:b \:c \:d])" "(function3 [\:A \:A \:G \:G \:G \:Z \:Z \:Z \:Z])" "(function3 [\:a])" "(function3 [\:a \:a \:a])" "(function3 [\:a])" "(function3 [\:a \:a \:a \:b \:b \:b \:c \:c \:c \:c])" "(time (function3 [\:a \:a \:a \:b \:b \:b \:b \:b \:c \:c \:c \:d \:d \:d \:d \:d]))"]
eclipse.preferences.version=1
