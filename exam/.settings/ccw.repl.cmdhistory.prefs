cmdhistory=["(unless true (println \\"Not Print\\"))" "(unless false (println \\"Not Print\\"))" "(macroexpand '(when-not false (println \\"False\\") (println \\"Second False\\")))" "(macroexpand (def a \\"10\\"))" "(macroexpand (def))" "(chain arm getHand)" "(chain arm false)" "(macroexpand '(chain arm getHand getFingure))" "(macroexpand '(chain arm getHand getFingure getNail))" "(and 1 0 nil false)" "(and 1 0 true \\n     false)" "(and 1 0 true false)" "(and 1 0)" "(and 1 0 1)" "(and 10001 11111)" "(and false 1000 111)" "(and 1000 111 false)" "(and (+ 1 2) (inc 12) (first [12 2 3]) (- 1 1) false (+ 10 11))" "(and (+ 1 2) (inc 12) (first [12 2 3]) (- 1 1) (+ 10 11))" "(and (+ 1 2) (println (inc 12)) (first [12 2 3]) (- 1 1) (+ 10 11))" "(or 1 2 3 4 5 6 7 false nil 12)" "(or nil 2 3 4 5 6 7 false nil 12)" "(or (inc 12) (dec 12))" "(or (inc 12) (dec 12) true)" "(or true (inc 12) (dec 12))" "(or nil (inc 12))" "(or nil false (inc 12))" "(or nil false 0 (inc 12))" "(macroexpand '(defstruct {\\"viral\\" \:name}))" "(macroexpand '(defstruct name {\\"viral\\" \:name}))" "(macroexpand '(declare i j k))" "(macroexpand '(\#(list 'def %)'[i j k]))" "(macroexpand '(\#(list def %)[i j k]))" "(\#(list def %) a)" "(\#(list 'def %) 'a)" "(map (\#(list 'def %) [i j k]))" "(def name [i j k])" "(def variables [i j k])" "(def variables [\\"i\\" \\"j\\" \\"k\\"])" "variables" "(map (\#(list 'def %) variables))" "(map \#(list 'def %) variables)" "(map \#(list 'def %) '[i j k])" "'(do (map \#(list 'def %) '[i j k]))" "'(do ~(map \#(list 'def %) '[i j k]))" "'(do ~@(map \#(list 'def %) '[i j k]))" "`(do ~@(map \#(list 'def %) '[a b c d]))" "(delay (inc 12))" "(def try1 (delay (inc 12)))" "try1" "(force try1)" "(def try1 (delay (time (* 2121212121 121212121212))))" "try1" "(force try1)" "(macroexpand (with-out-str (print \\"hello, \\") (print \\"world\\")))" "(macroexpand '(with-out-str (print \\"hello, \\") (print \\"world\\")))" "(macroexpand '(with-out-str '(print \\"hello, \\") '(print \\"world\\")))" "(macroexpand `(with-out-str '(print \\"hello, \\") '(print \\"world\\")))" "(macroexpand `(with-out-str (print \\"hello, \\") (print \\"world\\")))" "(assert (type [12 12 12]) (type [12 12 12]))" "(assert (type [12 12 12]) (type \\"Viral\\"))" "(assert (type [12 12 12]) (type true))" "(type [12 12 12])" "(type true)"]
eclipse.preferences.version=1
