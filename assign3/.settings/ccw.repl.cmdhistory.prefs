cmdhistory=["2r1000000000000" "2r1000000000000000" "2r10000000000000000" "10r65536" "10r100000" "(java.lang.Integer/toBinaryString 19 2)" "(java.lang.Integer/toBinaryString 19)" "(java.lang.Integer/toBinaryString 32768)" "(java.lang.Integer/toBinaryString 1212)" "(2r1212)" "(2r1000)" "\\n2r1000" "(binary2Deci 12)" "(binary2Deci 32768)" "(binary2Deci 25)" "(binary2Deci 32768)" "(binary2Deci 32)" "(binary2Deci 32768)" "(binary2Deci 328)" "(binary2Deci 32989898988)" "\=> (binary2Deci 329)" "(binary2Deci 329)" "(binary2Deci 32999)" "(binary2Deci 32999999)" "(binary2Deci 32999999989898989898)" "(binary2Deci 32999999)" "(binary2Deci 329999999)" "(binary2Deci 32999999999)" "(binary2Deci 3299999999)" "(binary2Deci 329999999)" "(count (binary2Deci 1212))" "(binary2Deci 1212)" "(binary2Deci 32768)" "(2^32)" "(binary2Deci 32768)" "(chunk-append [x [a a a a]])" "(chunk-append [x a a a a])" "(binary2Deci 32768)" "(binary2Deci 32)" "(binary2Deci 32768)" "(deci2Binary 32768)" "(deci2Binary 327)" "(deci2Binary 32768)" "(int->bdigits 32768)" "(zero-pad 0 (- (count (int->bdigits 32768)) 1))" "(zero-pad 0 15)" "(zero-pad (int->bdigits 32768) 15)" "(zero-pad (int->bdigits 32768) 55)" "(zero-pad (int->bdigits 32768) 15)" "(zero-pad (int->bdigits 32768) 31)" "(java.lang.Integer/valueOf \\"100000000\\")" "(java.lang.Integer/valueOf \\"100000000000000\\")" "(java.lang.Integer/valueOf as)" "(java.lang.Integer/valueOf \\"as\\")" "(java.lang.Integer/valueOf \\"34\\")" "(myINT->Binary 12)" "(deci2Binary 12)" "(deci2Binary 32768)" "(^ StringIndexOutOfBoundsException)" "(java.lang.Character/digit \\"c\\" 10)" "(java.lang.Character/digit c 10)" "(java.lang.Integer/toBinaryString 32768)" "(deci2Binary 32768)" "(deci2Binary 114688)" "(java.lang.Integer/toBinaryString 30)" "()" "(deci2Binary 32768)" "(count (deci2Binary 32768))" "(bit-and 100 110)" "(bit-set 12 2)" "(bit-set 12 1)" "(java.lang.Integer/toBinaryString 12)" "(java.lang.Integer/toBinaryString 14)" "(bit-test 12 1)" "(deci2Binary 32768)" "(type (deci2Binary 32768))" "(deci2Binary 32768)" "finalBinSeq" "(deci2Binary 114688)" "finalBinSeq" "(deci2Binary 114688)" "finalBinSeq" "(deci2Binary 32768)" "(deci2Binary 114688)" "(deci2Binary 32768)" "(2r100000)" "2r10000" "10r12" "2r12" "10r1000" "2r1" "(deci2Binary 32768)" "finalBinSeq" "(def s (java.lang.Integer/toString 32768 2))" "s" "(map \#(java.lang.Character/getNumericValue %) \\"1000000000000000\\")" "(map \#(java.lang.Character/getNumericValue %) \\"10000000000000y0\\")" "(map \#(java.lang.Character/getNumericValue %) \\"10000000000000a0\\")" "(map \#(java.lang.Character/getNumericValue %) \\"10000000000000aA0\\")" "(map \#(java.lang.Character/getNumericValue %) \\"10000000000009aA0\\")" "(map \#(java.lang.Character/digit % 10) \\"10000000\\")" "(map \#(java.lang.Character/digit % 10) \\"10000000Aa\\")" "(map \#(java.lang.Character/digit % 11) \\"10000000Aa\\")" "(deci2Binary 32768)" "finalBinSeq" "rule30" "(type finalBinSeq)" "(bit-and finalBinSeq 111)" "(bit-and 101 111)" "(bit-and 10100000 111)" "(bit-and 10100 111)" "(bit-and 101000 111)" "(bit-and 12 2)" "(bit-and 2 2)" "(deci2Binary 32768)" "(bit-and (deci2Binary 32768) 111111111111111)" "(bit-and 12 12)" "(bit-and 1010 1111)" "(bit-and 32768 7)" "(bit-and (bit-shift-left 4) 2)" "(bit-and (bit-shift-left 32768 14) 7)" "(bit-and (bit-shift-left 32768 15) 7)" "(bit-and (bit-shift-left 32768 16) 7)" "(bit-and (bit-shift-left 32768 13) 7)" "(bit-shift-left 32768 13)" "(bit-and (bit-shift-right 32768 14) 7)" "(bit-and (bit-shift-right 32768 13) 7)" "(bit-and (bit-shift-right 32768 12) 7)" "(bit-and (bit-shift-right 32768 15) 7)" "(bit-and (bit-shift-right 32768 16) 7)" "(contains? 1000 1)" "(contains? [1 2 3] 1)" "(bit-set 0 15)" "(bit-set (bit-set (bit-set 0 13) 14) 15)" "(bit-set (bit-set (bit-set 0 15)14)13)" "(bit-set 0 15)" "(bit-set 32768 16)" "(bit-set 98304 14)" "(bit-set(bit-set(bit-set 0 14)15)16)" "(bit-shift-right 4 1)" "(nextRow 32768)" "(type 4)" "(java.lang.Integer/toBinaryString 32768)" "(test [12121])" "(test [])" "(bit-test 12 3)" "(bit-test 12 4)" "(bit-and 12 1 1)" "(bit-and 12 3 4)" "(bit-and 12 4)" "(bit-and 12 4 4)" "(bit-and 12 4 3)" "(bit-and 8 10 14)" "(temp 12)" "(temp 32768)" "(bit-test 9 0)" "(bit-test 9 1)" "(nextRow 32768)" "(bit-and (bit-shift-right 32768 15) 7)" "(bit-and (bit-shift-right 32768 16) 7)" "(bit-and (bit-shift-right 32768 13) 7)" "(nextRow 12)" "(nextRow 12 0)" "(nextRow 32768 0)" "(range 8)" "(nextRow 1 1)" "(ns assign3.ready)" "(rule-mappings 30)" "(rule 30)" "(simulate 30 32768)" "(bit-and 12 3)" "\=> (bit-and 12 7)" "(bit-test 30 4)" "(bit-test 30 1)" "(bit-test 30 0)" "(bit-test 30 7)" "(bit-shift-right 12 1)" "(bit-set 0 12)" "(nextRow 30 32768)" "(bit-test (bit-and (bit-shift-right 32768 14) 7) rule)" "(bit-test (bit-and (bit-shift-right 32768 14) 7) 30)" "(bit-test (bit-and (bit-shift-right 32768 15) 7) 30)" "(bit-test (bit-and (bit-shift-right 32768 16) 7) 30)" "(bit-test (bit-and (bit-shift-right 32768 13) 7) 30)" "(bit-test 30 (bit-and (bit-shift-right 32768 15) 7))" "(nextRow 30 32768)" "(nextRow 30 32768 0)" "(type bit-set)" "(nextRow 30 32768 0)" "(type 0\\n      )" "(nextRow 30 32768)" "(def t1 0)" "def r1 15" "r1" "(def r1 15)" "t1" "r1" "(bit-set t1 r1)" "(type t1 r1)" "(type t1)" "(type nextLineFinal)" "(type r1)" "(type rotate)" "(nextRow 30 32768 0)" "(repeat 15(nextRow 30 32768 0))" "(nextRow 30 32768 0)" "(bit-set 32768 13 14 15)" "(nextRow 30 32768 0)" "(nextRow 30 032768 0)" "(nextRow 30 32768 0)" "(def tryRef (ref [12 12 12]))" "tryRef" "@tryRef" "(@tryRef)" "(ref-set tryRef [13 13 13])" "(dosync tryRef [13 13 13])" "@tryRef" "(dosync (ref-set tryRef [13 13 13]))" "@tryRef" "(def tryRef2 (ref \\"Viral\\"))" "@tryRef" "@tryRef2" "(dosync (ref-set tryRef [14 14 14] tryRef2 \\"Savani\\"))" "(dosync (ref-set tryRef [14 14 14]) (ref-set tryRef2 \\"Savani\\"))" "@tryRef" "(alter tryRef conj [15 15])" "(dosync (alter tryRef conj [15 15]))" "(dosync (alter tryRef conj 16 16))" "(conj tryRef 17)" "(conj tryRef [17])" "(next 30 32768 0)" "(nextRow 30 32768 0)" "(.parseByte 32)" "(.parseByte \\"V\\")" "(nextRow 30 327680 0)" "(nextRow 30 3276800 0)" "(nextRow 30 32768000 0)" "(nextRow 30 32768000000000000000 0)" "(nextRow 30 32768000 0)" "(nextRow 30 32768 0)" "(cl-format nil \\"base 7  ~7r  with width and zero pad  ~7,15,'0r\\" 63 63)" "(format \\"Pad with leading zeros %07d\\" 5432)" "(format \\"%07d\\" 5432)" "(format \\"%030d\\" 100000000000000)" "2r000000000000000100000000000000" "\=> 2r00000000000000100000000000000" "2r00000000000000010000000000000" "2r00000000000000100000000000000" "2r100000000000000" "2r1000000000000000" "2r000000000000000100000000000000" "32r000000000000000100000000000000" "31r000000000000000100000000000000" "2r1000000000000000" "2r01000000000000000" "2r0000000000000001000000000000000" "(defn binary-permutation [n]\\r\\n  (map (partial apply str) (selections [0 1] n)))" "(defn binary-permutation [n]\\r\\n  (map (partial format nil \\"~v,'0B\\" n) (range 0 (Math/pow 2 n))))" "(binary-permutation 1)" "(binary-permutation 10)" "(binary-permutation 15)" "(bit-shift-right 32768 15)" "(bit-shift-right 32768 16)" "(nextRow 30 32768)" "(nextRow 30 2r1000000000000000)" "(nextRow 30 2r0000000000000001000000000000000)" "(format \\"%030d\\" 100000000000000)" "(type (format \\"%030d\\" 100000000000000))" "(nextRow 30 32768)" "nextLineFinal" "(nextRow 30 32768)" "(format \\"%030d\\" \\"100000000000000\\")" "(funciton2)" "(prn \\"10\\")" "(prn 10)" "(funciton2)" "(nextRow 0 32768)" "(nextRow 30 32768)" "(function2)" "(\= 0 0)" "(\= \\" \\" \\" \\")" "(\= \\"0\\" \\"0\\")" "(function2)" "(def x \\"0\\")" "x" "(\= \\"0\\" x)" "(function2)" "x" "(def x \\"11100000000\\")" "x" "(replace x \\"0\\" \\" \\")" "(clojure.string/replace x \\"0\\" \\" \\")" "(function2)" "(nextRow 30 32768)" "(nextRow 30 114688)" "(java.Lang.Integer/toBinayString 204800)" "java.Lang.Integer/toBinayString 204800" "(function2)" "(temp (> 3) )" "(temp > 3 )" "(assoc [1 2 3] 2 \\"Yes\\")" "(merge-with + {\:a 2 \:b 4} {\:b 2 \:c 3})" "(function2)" "(nextRow 30 32768)" "(function2)" "(assoc (java.lang.Integer/toBinaryString (nextRow 30 32768)) \\"0\\" \\"X\\")" "(try 0)" "(try \\"0\\")" "(try \\"1\\")" "(try \\"1001010101\\")" "(clojure.string/replace \\"1001010101010101000\\" \\"0\\" \\" \\")" "(try \\"1010101\\")" "(try [1010101])" "(try \\"1010101\\")" "(try \\"Viral\\")" "(try)" "(tryTemp)" "(tryTemp \\"Viral 100011100\\")" "(clojure.string/replace \\"10000100010000111\\" \\"0\\" \\" \\")" "(function2)" "(format \\"Pad with leading zeros %07d\\" 5432)" "(def x 15)" "x" "(format \\"%0\\"x\\"d\\" 121)" "(format \\"%0xd\\" 121)" "(function2)" "(nextRow 30 32768)" "(nextRow 30 114688)" "(function2)" "(cons \\"Viral\\" \\"L\\")" "(cons \\"1001010110\\" \\"11111\\")" "(apply str (cons \\"1000101010\\" \\"11111\\"))" "(apply str (conj \\"1000101010\\" \\"11111\\"))" "(apply str (conj \\"*****\\" \\"11111\\"))" "(apply str (cons \\"*****\\" \\"11111\\"))" "(function2)" "(bit-clear 12 1)" "(bit-clear 12 2)" "(function2)" "(nextRow 30 32768)" "(function2)" "(chunk-next [1 2 3 4 5 6 7 8 9])" "(function2)" "(repeat (- 32 (count x)) \\"0\\")" "(repeat (15) \\"0\\")" "(repeat 15 \\"0\\")" "(apply str (repeat 15 \\"0\\"))" "(function2)" "(cons \\"000000000000000*\\" \\"111111111111\\")" "(apply str (cons \\"000000000000000*\\" \\"111111111111\\"))" "(str (repeat 15 \\"0\\"))" "(str (repeat 15 0))" "(apply str (repeat 15 0))" "(cons (apply str (repeat 15 0)) \\"1111111111\\")" "(apply str (cons (apply str (repeat 15 0)) \\"1111111111\\"))" "(function2)" "(function2 30 32768)" "(function2 30 114688)" "(take 10 (iterate (nextRow 30 32768)))" "(take 10 (iterate nextRow 30 32768))" "(take 10 (iterate (nextRow ) 30 32768))" "(take 10 (iterate nextRow 30 32768))" "(take 10 (iterate (nextRow a b) 30 32768))" "(take 10 (iterate (nextRow 30 %) 32768))" "(take 10 (iterate (nextRow 30 %s) 32768))" "(take 10 (iterate (nextRow 30 32768) 32768))" "(take 10 (iterate (fn [b] [(nextRow 30 b)]) 32768))" "(take 10 (iterate (fn [b] (nextRow 30 b)) 32768))" "(function3 30 32768 16)" "(function2 (nextRow 30 32768))" "(def d1 [\:a \:b \:c])\\r\\n(\#(map list % (range)) d1)" "(def d1 [\:a \:a \:a \:b \:c \:a])\\r\\n(\#(map list % (range)) d1)" "(function3 30 32768 16)" "(function3 30 32768 21)" "(function3 30 32768 5)" "(function3 30 32768 16)" "(function3 30 32768 17)" "(function3 30 32768 16)" "(function3 90 32768 16)" "(function3 120 32768 16)" "(function3 199 32768 16)" "(function3 60 32768 16)" "(function3 100 32768 16)" "(function3 70 32768 16)" "(function3 30 32768 16)" "(function3 90 32768 16)" "(function3 220 32768 16)" "(function3 110 32768 16)" "(time (function3 30 32768 16))" "(function3 30 32768 16)" "(function3 90 32768 16)" "(function3 220 32768 16)" "2r10000000000000000" "(function3 30 65536 16)" "(function3 30 32768 16)" "(bit-test 6 0)" "(bit-test 6 1)" "(bit-test 6 2)" "(bit-set 4 0)" "(function3 30 32768 16)" "(bit-shift-right 7 1)" "(bit-shift-left 7 1)" "(function3 30 32768 16)" "(function3 90 32768 16)" "(function3 120 32768 16)" "(time (function3 30 32768 16))" "(time (function3 90 32768 16))" "(time (function3 220 32768 16))" "(time (function3 120 32768 16))" "(defstruct [\:name \\"Viral\\" \:sname \\"Savani\\"])" "(defstruct [\\"Viral\\"\:name \\"Savani\\"\:sname])" "(and \\"viral\\" \\"savani\\")" "(and \\"viral\\" \\"sads\\")" "(and \\"viral\\" \\"vi\\")" "(and \\"vir\\" \\"viral\\")" "(expectorate F\:\\\\Edu\\\\CSULB\\\\SEM_1\\\\Advance Topic in PL\\\\New folder\\\\Notes - Copy.txt (gulp F\:\\\\Edu\\\\CSULB\\\\SEM_1\\\\Advance Topic in PL\\\\New folder\\\\Notes.txt))" "(expectorate F\:\\\\\\\\Edu\\\\\\\\CSULB\\\\\\\\SEM_1\\\\\\\\Advance Topic in PL\\\\\\\\New folder\\\\\\\\Notes - Copy.txt (gulp F\:\\\\\\\\Edu\\\\\\\\CSULB\\\\\\\\SEM_1\\\\\\\\Advance Topic in PL\\\\\\\\New folder\\\\\\\\Notes.txt))" "(expectorate [F\:\\\\\\\\Edu\\\\\\\\CSULB\\\\\\\\SEM_1\\\\\\\\Advance Topic in PL\\\\\\\\New folder\\\\\\\\Notes - Copy.txt (gulp F\:\\\\\\\\Edu\\\\\\\\CSULB\\\\\\\\SEM_1\\\\\\\\Advance Topic in PL\\\\\\\\New folder\\\\\\\\Notes.txt)])" "(expectorate \\"Notes- Copy.txt\\" (gulp \\"Notes.txt\\"))" "(expectorate \\"F\:\\\\Edu\\\\CSULB\\\\SEM_1\\\\Advance Topic in PL\\\\New folder\\\\Notes - Copy.txt\\" (gulp \\"F\:\\\\Edu\\\\CSULB\\\\SEM_1\\\\Advance Topic in PL\\\\New folder\\\\Notes.txt\\"))" "(expectorate \\"F\:\\\\\\\\Edu\\\\\\\\CSULB\\\\\\\\SEM_1\\\\\\\\Advance Topic in PL\\\\\\\\New folder\\\\\\\\Notes - Copy.txt\\" (gulp \\"F\:\\\\\\\\Edu\\\\\\\\CSULB\\\\\\\\SEM_1\\\\\\\\Advance Topic in PL\\\\\\\\New folder\\\\\\\\Notes.txt\\"))" "(nextRow 30 23456)"]
eclipse.preferences.version=1
